// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as utils$0 from "../utils/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../time/models.js";

/**
 * ENUM(
 * Red,
 * Orange,
 * Amber,
 * Yellow,
 * Lime,
 * Green,
 * Emerald,
 * Teal,
 * Cyan,
 * Sky,
 * Violet,
 * Purple,
 * Fuchsia,
 * Pink,
 * Rose)
 */
export type Color = string;

/**
 * ENUM(
 * 
 * 	Cat,
 * 	Dog,
 * 	Rabbit,
 * 	Snail,
 * 	Squirrel,
 * 	Turtle,
 * 	Bird,
 * 	Bug,
 * 	Fish,
 * 	Rat,
 * 	Worm,
 * 
 * )
 */
export type Icon = string;

/**
 * Task represents a task in the task tracking application.
 */
export class Task {
    /**
     * Unique identifier for the task
     */
    "id": number;

    /**
     * Title of the task
     */
    "title": string;

    /**
     * Description of the task
     */
    "description": string;

    /**
     * Color of the task
     */
    "color": Color;

    /**
     * Icon to identify project
     */
    "icon": Icon;

    /**
     * Start time of the task
     */
    "startTime": time$0.Time;

    /**
     * Duration of the task
     */
    "duration": utils$0.Duration;

    /**
     * Status of task completion
     */
    "completed": boolean;

    /**
     * Timestamp indicating when the task was created.
     */
    "createdAt": time$0.Time;

    /**
     * Timestamp indicating when the task was last updated.
     */
    "updatedAt": time$0.Time;

    /** Creates a new Task instance. */
    constructor($$source: Partial<Task> = {}) {
        if (!("id" in $$source)) {
            this["id"] = 0;
        }
        if (!("title" in $$source)) {
            this["title"] = "";
        }
        if (!("description" in $$source)) {
            this["description"] = "";
        }
        if (!("color" in $$source)) {
            this["color"] = "";
        }
        if (!("icon" in $$source)) {
            this["icon"] = "";
        }
        if (!("startTime" in $$source)) {
            this["startTime"] = null;
        }
        if (!("duration" in $$source)) {
            this["duration"] = null;
        }
        if (!("completed" in $$source)) {
            this["completed"] = false;
        }
        if (!("createdAt" in $$source)) {
            this["createdAt"] = null;
        }
        if (!("updatedAt" in $$source)) {
            this["updatedAt"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Task instance from a string or object.
     */
    static createFrom($$source: any = {}): Task {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Task($$parsedSource as Partial<Task>);
    }
}
