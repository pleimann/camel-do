package components

import "time"

func shiftWeekday(w time.Weekday, startWeekday time.Weekday) time.Weekday {
    // (w + 6) % 7 shifts Sunday (0) to 6, Monday (1) to 0, ..., Saturday (6) to 5
    return time.Weekday((int(w)+7-int(startWeekday))%7 + 1)
}

templ DayOfWeekSelector(startWeekday time.Weekday, date time.Time, target string) {
	<div id="dayOfWeekSelector" class="static w-full mb-4 flex flex-row gap-4 justify-center">
		{{ currentWeekday := time.Now().Weekday() }}
		for i := startWeekday; i < 7+startWeekday; i++ {
			{{
                w := time.Weekday(i % 7)
                
                // Calculate the date for this day of the week within the current week
                today := time.Now()
                
                // Find the start of the current week (based on startWeekday)
                daysFromStartOfWeek := int(today.Weekday()) - int(startWeekday)
                if daysFromStartOfWeek < 0 {
                    daysFromStartOfWeek += 7
                }
                startOfWeek := today.AddDate(0, 0, -daysFromStartOfWeek)
                
                // Calculate days from start of week to this weekday
                daysFromStart := int(w) - int(startWeekday)
                if daysFromStart < 0 {
                    daysFromStart += 7
                }

                isFuture := shiftWeekday(currentWeekday, startWeekday) < shiftWeekday(w, startWeekday)
                
                buttonDate := startOfWeek.AddDate(0, 0, daysFromStart)
			}}
			<button 
				class={ "btn", "btn-circle", templ.KV("btn-dash", isFuture), templ.KV("btn-accent", date.Weekday()==w) }
				hx-get="/timeline" 
                hx-vals={ `{ "date": "` + buttonDate.Format("20060102") + `" }` }
                hx-swap="outerHTML"
                hx-target={ target }
                @click={ "$data.selectedDate = '" + buttonDate.Format("20060102") + "'" }
			>
				{ w.String()[0:2] }
			</button>
		}
	</div>
}
